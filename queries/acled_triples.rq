PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX coy: <https://schema.coypu.org/global#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
  ?event a ?sub_event_type , ?event_type .
  ?event coy:hasCountryLocation ?country .
  ?event coy:hasLocation ?location .
  ?event rdfs:label ?label .
  ?event coy:hasTimestamp ?date .
  ?event coy:hasFatalities ?num_fatalities .

  ?country rdfs:label ?country_label .
  ?sub_event_type rdfs:label ?sub_event_type_label .
  ?event_type rdfs:label ?event_type_label .
   ?location rdfs:label ?location_label .
} WHERE {
  {
    SELECT * {
      graph <https://data.coypu.org/events/acled/2023/> {
        ?event a ?sub_event_type .
        FILTER(?sub_event_type not in (coy:Event, coy:Conflict)) # we omit the generic types, just keep the sub-event type


        ?event coy:hasTimestamp ?ts .
        BIND(xsd:date(?ts) AS ?date)
        FILTER(year(?date) = 2023)

        ?event coy:hasCountryLocation ?country .
        ?event rdfs:label ?label .

        #OPTIONAL {
        ?event coy:hasLocation ?location .
        #}
        ?event coy:hasFatalities ?num_fatalities .
      }
    } LIMIT 500
  }



  LATERAL {
       # get the event type based on the sub-event type from the ontology hierarchy
       ?sub_event_type rdfs:subClassOf ?event_type .

         # get labels TODO do it more efficiently, maybe offline to avoid heavy joins
      ?country rdfs:label ?country_label .
      ?sub_event_type rdfs:label ?sub_event_type_label .
      ?event_type rdfs:label ?event_type_label .
      ?location rdfs:label ?location_label .
  }
}